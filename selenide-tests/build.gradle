plugins {
    id 'java-library'
    id 'io.qameta.allure' version "2.11.2"
}

def allureVersion = '2.28.0'
def junit5Version = '5.10.2'
group = 'ru.qa.school.selenide'
version = '1.0-SNAPSHOT'

allure {
    report {
        version.set('2.29.0')
    }
    adapter { // отвечает за появление папки build/allure-results
        aspectjWeaver.set(true)
        frameworks {
            junit5 { // название фреймворка
                adapterVersion.set('2.28.0') // версия интеграции фреймворка
            }
        }
    }
}

repositories {
    mavenCentral()
}

compileJava {
    options.encoding = 'UTF-8'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation(
            'org.slf4j:slf4j-simple:2.0.12',
            'com.codeborne:selenide:7.2.3',
            'com.github.javafaker:javafaker:1.0.2',
            'com.codeborne:pdf-test:1.5.0',
            'com.codeborne:xls-test:1.4.3',
            'com.opencsv:opencsv:5.9',
            'com.fasterxml.jackson.core:jackson-core:2.17.2',
            'io.qameta.allure:allure-selenide:2.28.0',
            "org.junit.jupiter:junit-jupiter-api:$junit5Version",
            "org.junit.jupiter:junit-jupiter-engine:$junit5Version",
            "org.junit.jupiter:junit-jupiter-params:$junit5Version",
            "io.qameta.allure:allure-junit5:$allureVersion")
    runtimeOnly 'org.aspectj:aspectjweaver:1.9.22.1'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}